import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sqlmanager import SqlManager
import numpy as np
from matplotlib.ticker import ScalarFormatter


class AllDataSummaryVisualizer:

    """
    This is a STAT file [no graph] how many UNIQUE data we have got.
    kind of like overall statistics.

    The count table gives data count per file.
    
    Count
    1. Statistics: total username, total password, total email, total domains and services [Done]
    """

    def __init__(self) -> None:
        self.sqlmanager = SqlManager()
        self.data = self.sqlmanager.fetch_all_counts()
        self.sqlmanager.switch_database()
        self.data += self.sqlmanager.fetch_all_counts()
        self.filtered_data = []

    def filter_data(self):
        unique_files = set()
        for row in self.data:
            filename = row[5]
            if filename not in unique_files:
                self.filtered_data.append({
                    "username": row[0],
                    "password": row[1],
                    "email": row[2],
                    "domains": row[3],
                    "services": row[4],
                })
            unique_files.add(filename)

    def stat(self):
        total_stats = {'username': 0, 'password': 0,
                       'email': 0, 'domains': 0, 'services': 0}

        for item in self.filtered_data:
            total_stats["username"] += item["username"]
            total_stats["password"] += item["password"]
            total_stats["email"] += item["email"]
            total_stats["domains"] += item["domains"]
            total_stats["services"] += item["services"]

        df_summary = pd.DataFrame([total_stats])
        formatted_df = df_summary.applymap(lambda x: "{:,}".format(x) if isinstance(x, (int, float)) else x)
        print("Summary")
        print("Total File Parsed: ", len(self.filtered_data))
        print(f"Total Percentage: {((len(self.filtered_data) / 1809988) * 100):.2f}% of 1,809,988 data")

        
        print(formatted_df.T)


if __name__ == "__main__":
    abc = AllDataSummaryVisualizer()
    abc.filter_data()
    abc.stat()
