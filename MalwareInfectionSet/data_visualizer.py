import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


class DataVisualizer:
    def __init__(self, summary_data):
        """
        Initialize the DataVisualizer with summary data.
        :param summary_data: List of dictionaries containing summary data.
        """
        pass

    def plot_username_password_email_ratio(self, countries, summary_data):
        """
        Plots the ratio of (unique usernames to unique passwords) and 
        (unique emails to unique passwords) for selected countries.
        :param countries: List of countries to be included in the plot.
        """
        summary_df = pd.DataFrame(summary_data)
        # Filter the data for selected countries
        filtered_df = summary_df[summary_df['country'].isin(
            countries)]

        # Calculate ratios
        filtered_df['Username_Password_Ratio'] = filtered_df['unique_usernames'] / \
            filtered_df['unique_passwords']
        filtered_df['Email_Password_Ratio'] = filtered_df['unique_emails'] / \
            filtered_df['unique_passwords']

        # Plotting
        plt.figure(figsize=(12, 6))
        sns.barplot(x='country', y='Username_Password_Ratio',
                    data=filtered_df, label='Username/Password Ratio')
        sns.barplot(x='country', y='Email_Password_Ratio', data=filtered_df,
                    color='lightblue', label='Email/Password Ratio')
        plt.title('Ratio of Usernames and Emails to Passwords per Country')
        plt.legend()
        plt.show()

    def plot_password_domain_ratio(self, countries, summary_data):
        """
        Plots the ratio of unique passwords to unique domains for selected countries.
        :param countries: List of countries to be included in the plot.
        """
        summary_df = pd.DataFrame(summary_data)
        # Filter the data for selected countries
        filtered_df = summary_df[summary_df['country'].isin(
            countries)]

        # Calculate ratio
        filtered_df['Password_Domain_Ratio'] = filtered_df['unique_passwords'] / \
            filtered_df['unique_domains']

        # Plotting
        plt.figure(figsize=(12, 6))
        sns.barplot(x='country', y='Password_Domain_Ratio', data=filtered_df)
        plt.title('Ratio of Unique Passwords to Domains per Country')
        plt.show()
